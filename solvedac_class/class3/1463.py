n = int(input())
dp = [0] * (n + 1) # 여기에는 각각 i값을 1로 만드는 최소 연산 횟수를 저장할거임.

# 1, 2, 3 은 각각 한 번에 가능
# 4 = 4 -> 2 -> 1. 2번
# 5 = 5 -> 4 -> 2 -> 1. 3번 = 2,3으로도 나눠지지 않는 경우에는 1을 먼저 빼고 그 값의 최소 연산 횟수 더해주면 됨. 즉, dp[i - 1] + 1
# 6 = 6 -> 3 -> 1. 2번 # 2, 3으로 나눠지는 경우에는 그 값으로 나누고 남은 몫의 연산 횟수 더해주기
# 7 = 7 -> 6 -> 3 -> 1. 3번
# 8 = 8 -> 4 -> 2 -> 1. 3번
# 9 = 9 -> 3 -> 1. 2번
# 10 = 10 -> 9 -> 3 -> 1. 3번

for i in range(2, n + 1):   
    # 1을 빼는 경우를 먼저 실행. 왜냐면 빼는건 2부터라면 모든 숫자에 대해서 가능하니까.
    # 이 연산을 먼저 한 뒤에 2, 3으로 나눠지는 경우가 최소 횟수가 되는지 비교
    dp[i] = dp[i - 1] + 1

    # 2로 나누어 떨어지는 경우
    if i % 2 == 0:
        dp[i] = min(dp[i], dp[i // 2] + 1) # 1을 먼저 빼는 연산이 최소인지, 먼저 나누는게 최소인지 바교
    if i % 3 == 0: # 2나 3으로 둘 다 나누어 떨어지는 경우는 각각 다 계산하고 비교해줘야 하네
        dp[i] = min(dp[i], dp[i // 3] + 1)

print(dp[n])

